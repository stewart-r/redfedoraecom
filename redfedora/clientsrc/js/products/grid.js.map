{"version":3,"sources":["../../products/grid.fsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,6BASK;AAAA;;AAEwB;AAGC;AALZ;;uDAQgB;AAAA;AAAe,K;;;;;;;6BANlC;AAAA;AAAW;;;;;;6BAGP;AAAA;AAAQ;;;;yBAEiB;AAAA;AAAA,a;;;;;;;;;;AAhB5C,4BAmBK;AAAA;;AAEG,kCAAE;AAAA,sCACM;AAAO,2BAAQ,uCAAR;AAAA;AAAA;;AACA,2BAAQ,oDAAR;AAAA;AAAA;;AADP;AAGJ;AAHQ,aADV,EAAS,2BAAT;AAAA,UAAF;AAMJ,qBACI,WAAE;AAAA,sCACoC;AAAA,uBAAtB,eAAY,KAAZ,CAAsB;AAAA,aADpC,EAAS,wBAAM,2BAAN,CAAT;AAAA,UAAF,CADJ;AAGkB;AAXT;;;;;;sDAgBL;AAAA;AAAc,K;;;;;;;6BALP;AAAA;AAAI;;;;6BAG+B;AAAA;AAAA,a","file":"grid.js","sourceRoot":"C:/Users/stewa_000/Source/Repos/redfedoraecom/redfedora/clientsrc/js","sourcesContent":["module GridView\r\n\r\n#load \"../app.fsx\"\r\n#load \"../angularFable.fsx\"\r\n#load \"product.fsx\"\r\nopen App\r\nopen AngularFable.NgFable\r\nopen Product\r\n\r\ntype GridDirective() =\r\n    \r\n    member val templateUrl = \"products/grid.html\" with get, set\r\n\r\n    interface IDirective with \r\n        member val restrict = \"EA\" with get, set\r\n\r\n    static member Factory:array<obj> = [|\"\",GridDirective.GetInstance|]\r\n    static member GetInstance() = GridDirective() :> IDirective\r\n\r\ntype GridCtrl(http) = \r\n    let products = \r\n        [|for i in 1 .. 26 -> \r\n            let name = sprintf \"product%d\" i\r\n            let desc = sprintf \"some description of %d\" i\r\n            let imgUrl = \"https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcS6CmRDXEWsVbQ7xwJV1fj7Bci_WxMAsj2nwxglWu-SG5K8dFjbCsE8ss4\"\r\n            Product(name,desc,imgUrl)|]\r\n\r\n    let _rows = \r\n        [|for i in 0 .. (products.Length / 3 + 1) -> \r\n            products |> Array.skip (i * 3) |> Array.take 3|]\r\n    member val Http = http with get,set \r\n    member this.rows () = _rows\r\n\r\n    static member Factory:array<obj> = [|\"$http\"; GridCtrl.GetInstance|]\r\n    static member GetInstance (http) = \r\n        GridCtrl(http)\r\n        "]}