{"version":3,"sources":["../../products/gridViewCell.fsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,iCAUK;AAAA;;AAEwB;AAGC;AALR;;2DAQY;AAAA;AAAmB,K;;;;;;;6BANtC;AAAA;AAAW;;;;;;6BAGP;AAAA;AAAQ;;;;yBAEiB;AAAA;AAAA,a;;;;;;;;;;AAjB5C,iCAqBK;AAAA;;AACkB;AADN;;2DAIL;AAAM;AAAN;AAAG,K;;;;;;;6BAHA;AAAA;AAAK;;;;8BAC+B;AAAA;AAAA,a","file":"gridViewCell.js","sourceRoot":"C:/Users/stewa_000/Source/Repos/redfedoraecom/redfedora/clientsrc/js","sourcesContent":["module GridCellView\r\n\r\n#load \"../app.fsx\"\r\n#load \"../angularFable.fsx\"\r\n#load \"product.fsx\"\r\nopen App\r\nopen AngularFable.NgFable\r\nopen Product\r\n\r\n\r\ntype GridCellDirective() =\r\n    \r\n    member val templateUrl = \"products/gridCell.html\" with get, set\r\n\r\n    interface IDirective with \r\n        member val restrict = \"EA\" with get, set\r\n\r\n    static member Factory:array<obj> = [|\"\",GridCellDirective.GetInstance|]\r\n    static member GetInstance() = GridCellDirective() :> IDirective\r\n\r\n\r\ntype GridCellCtrl(scope:IProductScope) = \r\n    member val Scope = scope with get,set \r\n    static member Factory:array<obj> = [|\"$scope\"; GridCellCtrl.GetInstance|]\r\n    static member GetInstance (scope:IProductScope) = \r\n        let ret = GridCellCtrl(scope)\r\n        //ret.Scope.product <- Product(\"My Title\",\"My Description\",\"https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcS6CmRDXEWsVbQ7xwJV1fj7Bci_WxMAsj2nwxglWu-SG5K8dFjbCsE8ss4\")\r\n        ret\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}