{"version":3,"sources":["../index.fsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,wBAWU,yBAXV;;;AAAA,4BAcK;AAAA;;AAAS;AACV;AADS;;;;;;;;;;gDAOL;AAAA;;AAAA,6CAEuB;AAAA,wBAAQ,gCAAR;AAA0B,SAFjD;AAEkD,K;;sDAKlD;AAAA;AAAc,K;;;;;;;;;;6BAF4B;AAAA;AAAA,a;;;;;;;;;;AA1BlD,6BA+BK;AAAA;;AAEqB;AAII;AANZ;;uDASgB;AAAA;AAAe,K;;;;;;;6BAPlC;AAAA;AAAQ;;;;;;6BAIJ;AAAA;AAAQ;;;;yBAEiB;AAAA;AAAA,a;;;;;;;;;AAI5C;AACA,+BAA8B;AAAA;AAAA,CAA9B","file":"index.js","sourceRoot":"C:/Users/stewa_000/Source/Repos/redfedoraecom/redfedora/clientsrc/js","sourcesContent":["module App\r\n\r\n#load \"angularFable.fsx\"\r\n#r \"../node_modules/fable-core/Fable.Core.dll\"\r\n\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen AngularFable.NgFable\r\nopen Microsoft.FSharp.Quotations\r\n\r\n//Angular App\r\nlet app = AngularFable.NgFable.angular.``module``(\"app\",[||])\r\n\r\n//Angular Controller\r\ntype TestCtrl(http) =\r\n    let mutable str = \"not retrieved yet\" \r\n    member this.Http = http\r\n    member this.Val1() = \"boom\";\r\n    member this.Val2() = str;\r\n\r\n    member this.Fetch() = \r\n        this.Http\r\n            ?get(\"/api/ss\")\r\n            ?``then``(fun r -> str <- (r?data.ToString()))\r\n\r\n    //CTOR & dependencies. (in typescript these would be injected through $inject service but this requires js decorator support)\r\n    static member Factory:array<obj> = [|\"$http\"; TestCtrl.GetInstance|]\r\n    static member GetInstance (http) = \r\n        TestCtrl(http)\r\n\r\n//Angular directive\r\ntype TestDirective() =\r\n    \r\n    member val template = \"<b>Im coming from the directive!</b>\" with get, set\r\n    //member val restrict = \"EA\" with get, set\r\n\r\n    interface IDirective with \r\n        member val restrict = \"EA\" with get, set\r\n\r\n    static member Factory:array<obj> = [|\"\",TestCtrl.GetInstance|]\r\n    static member GetInstance() = TestDirective() :> IDirective\r\n\r\n\r\napp.controller(\"test\",TestCtrl.Factory)\r\napp.directive(\"testDirective\",TestDirective.GetInstance)\r\n\r\n"]}